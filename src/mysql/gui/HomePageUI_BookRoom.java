/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysql.gui;

/**
 *
 * @author Jur Yel
 */
import java.util.ArrayList;
import javax.swing.JOptionPane;
import mysql.core.Room;
import mysql.dao.RoomDAO;
import mysql.dao.CustomerDAO;
import mysql.core.Customer;
import mysql.core.Booking;
import mysql.dao.BookingDAO;
public class HomePageUI_BookRoom extends javax.swing.JFrame {

    /**
     * Creates new form HomePageUI_BookRoom
     */
    private RoomDAO roomDAO;
    private CustomerDAO custDAO;
    private BookingDAO bookDAO;
    private int hotel_id;
    private String hotel_name;
    private HomePageUI homeUI;
    public HomePageUI_BookRoom(int id,String name,HomePageUI ui){
        try{
            roomDAO = new RoomDAO();
            custDAO = new CustomerDAO();
            bookDAO = new BookingDAO();
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
        initComponents();
        setLocationRelativeTo(ui);
        hotel_id = id;
        hotel_name = name;
        homeUI = ui;
        jlbl_Hotel.setText(hotel_name);
        populateTable();
    }
    
    public HomePageUI_BookRoom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtxt_First = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxt_Last = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxt_Email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxt_Phone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_Rooms = new javax.swing.JTable();
        jtxt_Search = new javax.swing.JTextField();
        jbtn_Book = new javax.swing.JButton();
        jbtn_CheckIn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jlbl_Hotel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Alata", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CUSTOMER DETAILS");

        jLabel2.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("First Name:");

        jtxt_First.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jtxt_First.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last Name:");
        jLabel3.setToolTipText("");

        jtxt_Last.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jtxt_Last.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel4.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Email Address:");

        jtxt_Email.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jtxt_Email.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phone Number:");

        jtxt_Phone.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jtxt_Phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_First, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jtxt_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxt_First, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxt_Last, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtxt_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Alata", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("AVAILABLE ROOMS");

        jtbl_Rooms.setFont(new java.awt.Font("Alata", 0, 12)); // NOI18N
        jtbl_Rooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtbl_Rooms);

        jtxt_Search.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jtxt_Search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxt_Search.setText("Search Room");
        jtxt_Search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jtxt_SearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jtxt_SearchMouseExited(evt);
            }
        });
        jtxt_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxt_SearchKeyTyped(evt);
            }
        });

        jbtn_Book.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jbtn_Book.setText("Book Room");
        jbtn_Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_BookActionPerformed(evt);
            }
        });

        jbtn_CheckIn.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jbtn_CheckIn.setText("Check In");
        jbtn_CheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_CheckInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(297, 297, 297))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jtxt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(288, 288, 288))))
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jbtn_Book, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jbtn_CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 267, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jtxt_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_Book, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 63, -1, -1));

        jLabel6.setFont(new java.awt.Font("Alata", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BOOK ROOM");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 6, -1, -1));

        jlbl_Hotel.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jlbl_Hotel.setForeground(new java.awt.Color(255, 255, 255));
        jlbl_Hotel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbl_Hotel.setText("Hotel Name");
        jlbl_Hotel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.add(jlbl_Hotel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 140, -1));

        jLabel9.setFont(new java.awt.Font("Alata", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Hotel:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_BookActionPerformed
        int row = jtbl_Rooms.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,"Select a row","Book Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                String first = jtxt_First.getText().trim();
                String last = jtxt_Last.getText().trim();
                String email = jtxt_Email.getText().trim();
                String phone = jtxt_Phone.getText().trim();

                Customer customer = new Customer(first,last,phone,email);
                if(!(custDAO.checkCustomerName(first+" "+last))){
                    custDAO.addCustomer(customer);
                }
                

                int custID = custDAO.getCustomerID(first + " " + last);
                int room_id = Integer.parseInt(jtbl_Rooms.getValueAt(row,-2).toString());
                String room_type = jtbl_Rooms.getValueAt(row,1).toString();
                
                if(bookDAO.checkIfRoomBooked(room_id)){
                    JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,"Room has already been booked!","Room Booked",JOptionPane.ERROR_MESSAGE);
                }
                else{
                    if(bookDAO.checkIfUserBooked(custID)){
                        ArrayList<Booking> bookDetails = bookDAO.getUserBookingDetails(custID, hotel_id);
                        Booking booked = bookDetails.get(0);
                        if((JOptionPane.showConfirmDialog(HomePageUI_BookRoom.this,
                                "Customer already made a booking; \n\n"
                              + "\tRoom Type: " + booked.getRoomType() + "\n"
                              + "\tBook Date: " + booked.getLSBookDate() + "\n\n"
                              + "Cancel booking and book this room instead?","Booking Exists",
                              JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE)) == JOptionPane.OK_OPTION){
                            bookDAO.cancelBooking(booked.getBookingID());

                            Booking newBooking = new Booking(hotel_name,first,last,room_type,null,null,null,0);
                            newBooking.setCustomerID(custID);
                            newBooking.setRoomID(room_id);
                            newBooking.setHotelID(hotel_id);

                            bookDAO.bookRoom(booked);
                            JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                    "Room has been booked successfully!","Book Success",JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    else{
                        Booking booking = new Booking(hotel_name,first,last,room_type,null,null,null,0);
                        booking.setCustomerID(custID);
                        booking.setRoomID(room_id);
                        booking.setHotelID(hotel_id);
                        
                        bookDAO.bookRoom(booking);
                        JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                "Room has been booked successfully!","Book Success",JOptionPane.INFORMATION_MESSAGE
                                     );
                    }
                }
                homeUI.refreshTable();
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jbtn_BookActionPerformed

    private void jtxt_SearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxt_SearchMouseEntered
        if(jtxt_Search.getText().contains("Search Room")){
            jtxt_Search.setText("");
        }
    }//GEN-LAST:event_jtxt_SearchMouseEntered

    private void jtxt_SearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxt_SearchMouseExited
        if(jtxt_Search.getText().isEmpty()){
            jtxt_Search.setText("Search Room");
        }
    }//GEN-LAST:event_jtxt_SearchMouseExited

    private void jtxt_SearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_SearchKeyTyped
        String search = jtxt_Search.getText().trim();
        try{
            if(search.isEmpty()){
                ArrayList<Room> list = roomDAO.getHotelRooms(hotel_id);
                RoomTableModel model = new RoomTableModel(list);
                jtbl_Rooms.setModel(model);
            }
            else{
                
                ArrayList<Room> list = roomDAO.searchHotelRoom(hotel_id,search);
                RoomTableModel model = new RoomTableModel(list);
                jtbl_Rooms.setModel(model);
            }
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }//GEN-LAST:event_jtxt_SearchKeyTyped

    private void jbtn_CheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_CheckInActionPerformed
        int row = jtbl_Rooms.getSelectedRow();
        if(row < 0){
            JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,"Select a row","Check In Error",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                String first = jtxt_First.getText().trim();
                String last = jtxt_Last.getText().trim();
                String email = jtxt_Email.getText().trim();
                String phone = jtxt_Phone.getText().trim();

                Customer customer = new Customer(first,last,phone,email);
                if(!(custDAO.checkCustomerName(first + " " + last))){
                        custDAO.addCustomer(customer);
                }

                int custID = custDAO.getCustomerID(first + " " + last);
                int room_id = Integer.parseInt(jtbl_Rooms.getValueAt(row,-2).toString());
                String room_type = jtbl_Rooms.getValueAt(row,1).toString();
                
                if(bookDAO.checkIfRoomBooked(room_id)){
                    int exCust_id = bookDAO.getCustomerIDByRoomID(room_id);
                    
                    if(custID == exCust_id){
                        ArrayList<Booking> bookDetails = bookDAO.getUserBookingDetails(custID, hotel_id);
                        Booking booked = bookDetails.get(0);
                        if((JOptionPane.showConfirmDialog(HomePageUI_BookRoom.this,
                                "You had booked this room: \n\n"
                                        + "\tRoom Type: " + booked.getRoomType() + "\n"
                                        + "\tBook Date: " + booked.getLSBookDate() + "\n\n"
                                                + "Check in this room?","Confirm Check In",JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE)) == JOptionPane.OK_OPTION){
                            bookDAO.checkInBookedRoom(booked);
                            JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                        "Customer has checked in successfully!","Check In Success",JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    else if(custID != exCust_id){
                        JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,"Room has already been occupied!","Room Occupied",JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
                else{
                    if(bookDAO.checkIfCheckedIn(custID)){
                        ArrayList<Booking> bookDetails = bookDAO.getUserBookingDetails(custID, hotel_id);
                        Booking booked = bookDetails.get(0);
                        JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                "Customer is already checked in a room; \n\n"
                              + "\tRoom Type: " + booked.getRoomType() + "\n"
                              + "\tCheck In Date: " + booked.getLSCheckInDate()+ "\n\n"
                              + "Already checked in!","Booking Exists",
                              JOptionPane.ERROR_MESSAGE);
                    }
                    else{
                        if(bookDAO.checkIfUserBooked(custID)){
                            ArrayList<Booking> bookDetails = bookDAO.getUserBookingDetails(custID, hotel_id);
                            Booking booked = bookDetails.get(0);
                            if((JOptionPane.showConfirmDialog(HomePageUI_BookRoom.this,
                                    "Customer already made a booking; \n\n"
                                  + "\tRoom Type: " + booked.getRoomType() + "\n"
                                  + "\tBook Date: " + booked.getLSBookDate() + "\n\n"
                                  + "Cancel booking and check in this room instead?","Booking Exists",
                                  JOptionPane.OK_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE)) == JOptionPane.OK_OPTION){
                                int booking_id = bookDAO.getBookingIDByCustID(custID);
                                bookDAO.cancelBooking(booking_id);
                                
                                Booking newBooking = new Booking(hotel_name,first,last,room_type,null,null,null,0);
                                newBooking.setCustomerID(custID);
                                newBooking.setRoomID(room_id);
                                newBooking.setHotelID(hotel_id);
                                
                                bookDAO.checkInRoom(newBooking);


                                JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                        "Customer has checked in successfully!","Check In Success",JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                        else{
                            Booking newBooking = new Booking(hotel_name,first,last,room_type,null,null,null,0);
                                newBooking.setCustomerID(custID);
                                newBooking.setRoomID(room_id);
                                newBooking.setHotelID(hotel_id);

                                bookDAO.checkInRoom(newBooking);
                                JOptionPane.showMessageDialog(HomePageUI_BookRoom.this,
                                        "Customer has checked in successfully!","Check In Success",JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                    
                     
                }
                homeUI.refreshTable();
            }
            catch(Exception exc){
                exc.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jbtn_CheckInActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        homeUI.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePageUI_BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePageUI_BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePageUI_BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePageUI_BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePageUI_BookRoom().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtn_Book;
    private javax.swing.JButton jbtn_CheckIn;
    private javax.swing.JLabel jlbl_Hotel;
    private javax.swing.JTable jtbl_Rooms;
    private javax.swing.JTextField jtxt_Email;
    private javax.swing.JTextField jtxt_First;
    private javax.swing.JTextField jtxt_Last;
    private javax.swing.JTextField jtxt_Phone;
    private javax.swing.JTextField jtxt_Search;
    // End of variables declaration//GEN-END:variables

    private void populateTable(){
        try{
            ArrayList<Room> list = roomDAO.getHotelRooms(hotel_id);
            RoomTableModel model  = new RoomTableModel(list);
            jtbl_Rooms.setModel(model);
        }
        catch(Exception exc){
            exc.printStackTrace();
        }
    }
}
